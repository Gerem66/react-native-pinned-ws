apply plugin: "com.android.library"
apply plugin: "com.facebook.react"

// Define variables before they are used
def getExtOrDefault(name, defaultValue) {
    return rootProject.ext.has(name) ? rootProject.ext.get(name) : defaultValue
}

def getExtOrIntegerDefault(name, defaultValue) {
    return rootProject.ext.has(name) ? rootProject.ext.get(name) : defaultValue
}

def isNewArchitectureEnabled() {
    // To opt-in for the New Architecture, you can either:
    // - Set `newArchEnabled` to true inside the `gradle.properties` file
    // - Invoke gradle with `-PnewArchEnabled=true`
    // - Set an environment variable `ORG_GRADLE_PROJECT_newArchEnabled=true`
    return project.hasProperty("newArchEnabled") && project.newArchEnabled == "true"
}

def kotlin_version = getExtOrDefault("kotlinVersion", "1.8.10")

def REACT_ANDROID_DIR = new File(["node", "--print", "require.resolve('react-native/package.json')"].execute(null, rootDir).text.trim()).parent + "/ReactAndroid"
def REACT_ANDROID_BUILD_DIR = "$REACT_ANDROID_DIR/build"
def nodeModulesDir = new File(rootProject.projectDir, "../node_modules")

def reactNativeArchitectures() {
    def value = project.getProperties().get("reactNativeArchitectures")
    return value ? value.split(",") : ["armeabi-v7a", "x86", "x86_64", "arm64-v8a"]
}

/**
 * This is the configuration block to customize your React Native Android app.
 * By default you don't need to apply any configuration, just uncomment the lines you need.
 */
react {
    libraryName = "SSLWebSocket"
    codegenJavaPackageName = "com.sslwebsocket"
}

android {
    compileSdkVersion getExtOrDefault("compileSdkVersion", 34)

    namespace "com.sslwebsocket"
    defaultConfig {
        minSdkVersion getExtOrDefault("minSdkVersion", 21)
        targetSdkVersion getExtOrDefault("targetSdkVersion", 34)
        buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
        
        if (isNewArchitectureEnabled()) {
            externalNativeBuild {
                cmake {
                    arguments "-DPROJECT_BUILD_DIR=${buildDir}",
                        "-DREACT_ANDROID_DIR=${REACT_ANDROID_DIR}",
                        "-DREACT_ANDROID_BUILD_DIR=${REACT_ANDROID_BUILD_DIR}",
                        "-DNODE_MODULES_DIR=${nodeModulesDir}",
                        "-DANDROID_STL=c++_shared"
                    cppFlags "-O2 -frtti -fexceptions -Wall -Wextra -fstack-protector-all"
                    abiFilters(*reactNativeArchitectures())
                }
            }
        }
    }
    
    if (isNewArchitectureEnabled()) {
        externalNativeBuild {
            cmake {
                path "CMakeLists.txt"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
        }
    }

    lintOptions {
        disable "GradleCompatible"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
}

repositories {
    mavenCentral()
    google()
}

dependencies {
    // For < 0.71, this will be from the local maven repo
    // For > 0.71, this will be replaced by `com.facebook.react:react-android:$version` by react gradle plugin
    //noinspection GradleDynamicVersion
    implementation "com.facebook.react:react-android:+"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.annotation:annotation:1.6.0"
    implementation "com.squareup.okhttp3:okhttp:4.12.0"
}
